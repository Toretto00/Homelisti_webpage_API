// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using homelisti_API.Data;

#nullable disable

namespace homelisti_API.Migrations
{
    [DbContext(typeof(HomelistiDbContext))]
    partial class HomelistiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("homelisti_API.Choices", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Optionsdefaults")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Optionsdefaults");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("homelisti_API.Contact", b =>
                {
                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("locationterm_id")
                        .HasColumnType("int");

                    b.Property<string>("whatsapp_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("phone");

                    b.HasIndex("locationterm_id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("homelisti_API.CustomFields", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Listingslisting_id")
                        .HasColumnType("int");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Listingslisting_id");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("homelisti_API.Images", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.Categories", b =>
                {
                    b.Property<int>("term_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("term_id"));

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("term_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.ListingTypes", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ListingTypes");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.Listings", b =>
                {
                    b.Property<int>("listing_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("listing_id"));

                    b.Property<string>("ad_typeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("categoriesterm_id")
                        .HasColumnType("int");

                    b.Property<string>("contactphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("imagesID")
                        .HasColumnType("int");

                    b.Property<string>("price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("view_count")
                        .HasColumnType("int");

                    b.HasKey("listing_id");

                    b.HasIndex("ad_typeid");

                    b.HasIndex("categoriesterm_id");

                    b.HasIndex("contactphone");

                    b.HasIndex("imagesID");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.Locations", b =>
                {
                    b.Property<int>("term_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("term_id"));

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("term_id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("homelisti_API.Options", b =>
                {
                    b.Property<string>("defaults")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CustomFieldsid")
                        .HasColumnType("int");

                    b.HasKey("defaults");

                    b.HasIndex("CustomFieldsid");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("homelisti_API.Choices", b =>
                {
                    b.HasOne("homelisti_API.Options", null)
                        .WithMany("choices")
                        .HasForeignKey("Optionsdefaults");
                });

            modelBuilder.Entity("homelisti_API.Contact", b =>
                {
                    b.HasOne("homelisti_API.Models.Domain.Locations", "location")
                        .WithMany()
                        .HasForeignKey("locationterm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("location");
                });

            modelBuilder.Entity("homelisti_API.CustomFields", b =>
                {
                    b.HasOne("homelisti_API.Models.Domain.Listings", null)
                        .WithMany("custom_fields")
                        .HasForeignKey("Listingslisting_id");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.Listings", b =>
                {
                    b.HasOne("homelisti_API.Models.Domain.ListingTypes", "ad_type")
                        .WithMany()
                        .HasForeignKey("ad_typeid");

                    b.HasOne("homelisti_API.Models.Domain.Categories", "categories")
                        .WithMany()
                        .HasForeignKey("categoriesterm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("homelisti_API.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("contactphone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("homelisti_API.Images", "images")
                        .WithMany()
                        .HasForeignKey("imagesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad_type");

                    b.Navigation("categories");

                    b.Navigation("contact");

                    b.Navigation("images");
                });

            modelBuilder.Entity("homelisti_API.Options", b =>
                {
                    b.HasOne("homelisti_API.CustomFields", null)
                        .WithMany("options")
                        .HasForeignKey("CustomFieldsid");
                });

            modelBuilder.Entity("homelisti_API.CustomFields", b =>
                {
                    b.Navigation("options");
                });

            modelBuilder.Entity("homelisti_API.Models.Domain.Listings", b =>
                {
                    b.Navigation("custom_fields");
                });

            modelBuilder.Entity("homelisti_API.Options", b =>
                {
                    b.Navigation("choices");
                });
#pragma warning restore 612, 618
        }
    }
}
